-- The following are example assessment questions from SQLZoo.net

--HelpDesk Questions
--1. There are three issues that include the words "index" and "Oracle". Find the call_date for each of them

SELECT Call_date, call_ref FROM issue
WHERE detail like '%index%' AND detail like '%Oracle%';

--2. Samantha Hall made three calls on 2017-08-14. Show the date and time for each

SELECT call_date, first_name, last_name
FROM issue i
LEFT JOIN caller c
ON i.caller_id = c.caller_id
WHERE call_date = '2017-08-14'
AND (first_name = 'Samantha' AND last_name = 'Hall');

--3. There are 500 calls in the system (roughly). Write a query that shows the number that have each status.

SELECT status, COUNT(Call_ref)
FROM issue
GROUP BY status;

--4. Calls are not normally assigned to a manager but it does happen. How many calls have been assigned to staff who are at Manager Level?

SELECT COUNT(i.Call_ref) AS Manager
FROM Issue i
JOIN staff s
ON i.assigned_to = s.staff_code
JOIN level l
ON s.level_code = l.level_code
WHERE l.Manager = 'Y';

--5. Show the manager for each shift. Your output should include the shift date and type; also the first and last name of the manager.

SELECT Shift_date, Shift_type, first_name, last_name
FROM Shift sh
JOIN Staff st
ON sh.Manager = st.staff_code;

--6. List the Company name and the number of calls for those companies with more than 18 calls.

SELECT Cu.Company_name, COUNT(i.Call_ref)
FROM Issue i
JOIN Caller Ca
ON i.Caller_id = Ca.Caller_id
JOIN Customer Cu
ON Ca.Company_ref = Cu.Company_ref
GROUP BY Cu.Company_name
HAVING COUNT(i.Call_ref) > 18;

--7. Find the callers who have never made a call. Show first name and last name

SELECT c.first_name, c.last_name
FROM Caller c
LEFT JOIN Issue i
ON c.Caller_id = i.Caller_id
WHERE i.call_date IS NULL
OR i.call_date = '';

--8. For each customer show: Company name, contact name, number of calls where the number of calls is fewer than 5

WITH CTE AS (
SELECT Cu.Company_name, CONCAT(Ca.Last_name, ', ', Ca.First_name) AS Contact_Name, i.Call_ref 
FROM Issue i
JOIN Caller Ca
ON i.Caller_id = Ca.Caller_id
JOIN Customer Cu
ON Ca.Company_ref = Cu.Company_ref
)

SELECT Company_name, MIN(Contact_Name) AS Contact, COUNT(Call_ref) AS Call_Count
FROM CTE
GROUP BY Company_name
HAVING COUNT(Call_ref) < 5;

--9. For each shift show the number of staff assigned. Beware that some roles may be NULL and that he same person might have been assigned to multiple roles (The roles are 'Manager', 'Operator', 'Engineer1', 'Engineer2).

WITH Staff_Count_CTE AS (
SELECT Staff_code, Shift_date, Shift_Type
FROM Staff
JOIN Shift
ON Shift.Manager = Staff.Staff_code
UNION
SELECT Staff_code, Shift_date, Shift_Type
FROM Staff
JOIN Shift
ON Shift.Operator = Staff.Staff_code
UNION
SELECT Staff_code, Shift_date, Shift_Type
FROM Staff
JOIN Shift
ON Shift.Engineer1 = Staff.Staff_code
UNION
SELECT Staff_code, Shift_date, Shift_Type
FROM Staff
JOIN Shift
ON Shift.Engineer2 = Staff.Staff_code)

SELECT Shift_date, Shift_type,
COUNT(DISTINCT Staff_code) AS Crew_Level
FROM Staff_Count_CTE
GROUP BY Shift_date, Shift_type;

--10. Caller 'Harry' claims that the operator who took his most recent call was abusive and insulting. Find out who took the call (full name) and when.

SELECT i.Call_date, s.First_name, s.Last_name
FROM Caller c
JOIN Issue i
ON c.Caller_id = i.Caller_id
JOIN Staff s
ON i.Taken_by = s.Staff_code
WHERE c.First_name like '%Harry%'
ORDER BY i.Call_date DESC
LIMIT 1;

--Guest House Assessment
--1. Guest 1183. Give the booking_date and the number of nights for guest 1183.

SELECT booking_date, nights
FROM booking
WHERE guest_id = 1183;

--2. When do they get here? List the arrival time and the first and last names for all guests due to arrive on 2016-11-05, order the output by time of arrival.

SELECT arrival_time, first_name, last_name
FROM booking
JOIN guest
ON booking.guest_id = guest.id
WHERE booking_date like '2016-11-05%'
ORDER BY arrival_time ASC;

--3. Look up daily rates. Give the daily rate that should be paid for bookings with ids 5152, 5165, 5154 and 5295. Include booking id, room type, number of occupants and the amount.

SELECT b.booking_id, b.room_type_requested, b.occupants, r.amount
  FROM rate r
LEFT JOIN booking b
ON r.occupancy = b.occupants
  AND r.room_type = b.room_type_requested
WHERE b.booking_id = 5152
  OR b.booking_id = 5165
  OR b.booking_id = 5154
  OR b.booking_id = 5295;

--4. Who’s in 101? Find who is staying in room 101 on 2016-12-03, include first name, last name and address.

SELECT g.first_name, g.last_name, g.address
  FROM guest g
JOIN booking b
  ON g.id = b.guest_id
WHERE b.room_no = 101
  AND b.booking_date like '2016-12-03%';

--5. How many bookings, how many nights? For guests 1185 and 1270 show the number of bookings made and the total number of nights. Your output should include the guest id and the total number of bookings and the total number of nights.

SELECT b.guest_id, COUNT(b.guest_id)AS Bookings, SUM(b.nights) AS Nights
FROM booking b
WHERE b.guest_id = 1185
  OR b.guest_id = 1270
GROUP BY b.guest_id;

--6. Ruth Cadbury. Show the total amount payable by guest Ruth Cadbury for her room bookings. You should JOIN to the rate table using room_type_requested and occupants.

SELECT SUM(b.nights * r.amount) AS Amount_Payable
FROM rate r
JOIN booking b
  ON r.room_type = b.room_type_requested
  AND r.occupancy = b.occupants
JOIN guest g
  ON b.guest_id = g.id
WHERE g.first_name like '%Ruth%'
  AND g.last_name like '%Cadbury%'
GROUP BY g.first_name, g.last_name;

--7. Including Extras. Calculate the total bill for booking 5346 including extras.

SELECT SUM(b.nights * r.amount) + SUM(e.amount) AS Total_Bill
FROM rate r
JOIN booking b
  ON r.room_type = b.room_type_requested
  AND r.occupancy = b.occupants
JOIN extra e
  ON b.booking_id = e.booking_id
WHERE b.booking_id = 5346;

--8. Edinburgh Residents. For every guest who has the word “Edinburgh” in their address show the total number of nights booked. Be sure to include 0 for those guests who have never had a booking. Show last name, first name, address and number of nights. Order by last name then first name.

SELECT g.last_name, g.first_name, g.address, ISNULL(SUM(b.nights), 0) AS Total_Nights
  FROM guest g
LEFT JOIN booking b
  ON g.id = b.guest_id
WHERE g.address like '%Edinburgh%'
GROUP BY g.last_name, g.first_name, g.address
ORDER BY g.last_name, g.first_name;

--9. How busy are we? For each day of the week beginning 2016-11-25 show the number of bookings starting that day. Be sure to show all the days of the week in the correct order.

SELECT CAST(booking_date AS char(10)) AS Date, COUNT(booking_id) AS Bookings
FROM booking
WHERE booking_date >= '2016-11-25'
GROUP BY booking_date
ORDER BY booking_date ASC;

--10. How many guests? Show the number of guests in the hotel on the night of 2016-11-21. Include all occupants who checked in that day but not those who checked out.

SELECT 
SUM(
  CASE
    WHEN '2016-11-21' BETWEEN booking_date AND DATEADD(day, nights-1, booking_date)
      THEN occupants
  ELSE 0
END) AS Occupants
FROM booking;
