-- In this SQL, using SQLLiteStudio, I'm querying a database with multiple tables in it to quantify statistics about customer and order data. 

-- Initial queiries to get to know the columns, types of data, and data formats in the different tables within the database
SELECT * FROM customers LIMIT 20;
SELECT * FROM JanSales LIMIT 20;

-- Query to see if there are any unusual or mistaken entries resulting in NULL data or blanks
SELECT * FROM customers WHERE order_id IS NULL OR acctnum IS NULL;
    -- No NULL data results
SELECT * FROM customers ORDER BY order_id ASC;
    -- This query resulted in several blank entries in the order_id column
SELECT * FROM customers ORDER BY order_id DESC;
    -- This query resulted in several text entries labeled "Order ID" in the order_id column
SELECT * FROM customers ORDER BY acctnum ASC;
    -- No unusual or mistaken data entries
SELECT * FROM customers ORDER BY acctnum DESC;
    -- No unusual or mistaken data entries

-- Knowing there are incorrect entries, future quieires will need to filter out the bad data using the following definition of what should be in the order_id column
-- WHERE length(order_id) = 6 AND order_id <> 'Order ID' AND order_id IS NOT NULL AND order_id <> ''

-- The following are example queries for data analytics of the example database

-- How many orders were placed in January?
SELECT COUNT(orderID)
    FROM JanSales
    WHERE length(orderID) = 6
        AND orderID <> 'Order ID'
        AND orderID IS NOT NULL
        AND orderID <> '';

-- Of those orders placed in January, how many were for an iPhone?
SELECT COUNT(orderID)
    FROM JanSales
    WHERE length(orderID) = 6
        AND orderID <> 'Order ID'
        AND orderID IS NOT NULL
        AND orderID <> ''
        AND Product='iPhone';

-- Show the customer account numbers for all the orders placed in February
SELECT customers.acctnum, FebSales.orderdate
    FROM FebSales
    LEFT JOIN customers
    ON FebSales.orderID = customers.order_id
    WHERE length(orderID) = 6
        AND orderID <> 'Order ID'
        AND orderID IS NOT NULL
        AND orderID <> '';
        
-- Which product was the cheapest one sold in January and what was the price?
SELECT product, MIN(price)
    FROM JanSales
    WHERE length(orderID) = 6
        AND orderID <> 'Order ID'
        AND orderID IS NOT NULL
        AND orderID <> '';
        
       
-- What is the total revenue for each product sold in January?
SELECT product, SUM(quantity) AS TTL_sold, price, ROUND(SUM(quantity)*price,2) AS revenue
    FROM JanSales
    WHERE length(orderID) = 6
        AND orderID <> 'Order ID'
        AND orderID IS NOT NULL
        AND orderID <> ''
    GROUP BY product;
        
-- Which products were sold in February at 548 Lincoln St, Seattle, WA 98101, how many of each were sold, and what was the total revenue?
SELECT product, SUM(quantity), price, SUM(quantity)*price AS revenue
    FROM FebSales
    WHERE length(orderID) = 6
        AND orderID <> 'Order ID'
        AND orderID IS NOT NULL
        AND orderID <> ''
        AND location='548 Lincoln St, Seattle, WA 98101'
    GROUP BY product;

-- How many customers ordered more than 2 products at a time in February, and what was the average amount spent for those customers?
SELECT COUNT(customers.acctnum), ROUND(AVG(FebSales.Quantity*FebSales.price),2) AS AVG_Amt_Spent
    FROM FebSales
    LEFT JOIN customers
    ON FebSales.orderID = customers.order_id
    WHERE length(orderID) = 6
        AND orderID <> 'Order ID'
        AND orderID IS NOT NULL
        AND orderID <> ''
        AND Quantity > 2;
